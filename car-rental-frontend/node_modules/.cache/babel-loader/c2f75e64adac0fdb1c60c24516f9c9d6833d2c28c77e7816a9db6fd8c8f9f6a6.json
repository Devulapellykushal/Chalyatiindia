{"ast":null,"code":"var _jsxFileName = \"/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { seedCars } from '../store/seed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cars: [],\n  lastId: 0\n};\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT_CARS':\n      return {\n        cars: action.payload,\n        lastId: action.payload.length\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1)\n      };\n      return {\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => car.id === action.payload.id ? action.payload : car)\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\nexport const CarsProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from localStorage or seed data\n  useEffect(() => {\n    // Force load from seed data for now to debug\n    console.log('Seed cars available:', seedCars.length);\n    console.log('Seed cars:', seedCars);\n\n    // Temporarily force load from seed data\n    dispatch({\n      type: 'INIT_CARS',\n      payload: seedCars\n    });\n\n    // Comment out localStorage logic for debugging\n    /*\n    const savedCars = localStorage.getItem('cars-state-v2');\n    if (savedCars) {\n      try {\n        const parsed = JSON.parse(savedCars);\n        console.log('Loading cars from localStorage:', parsed.cars.length);\n        dispatch({ type: 'INIT_CARS', payload: parsed.cars });\n      } catch (error) {\n        console.error('Error parsing saved cars:', error);\n        console.log('Loading cars from seed data:', seedCars.length);\n        dispatch({ type: 'INIT_CARS', payload: seedCars });\n      }\n    } else {\n      console.log('No saved cars found, loading from seed data:', seedCars.length);\n      dispatch({ type: 'INIT_CARS', payload: seedCars });\n    }\n    */\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    localStorage.setItem('cars-state-v2', JSON.stringify({\n      // Updated version\n      cars: state.cars,\n      lastId: state.lastId\n    }));\n  }, [state.cars, state.lastId]);\n  const addCar = carData => {\n    dispatch({\n      type: 'ADD_CAR',\n      payload: carData\n    });\n  };\n  const updateCar = carData => {\n    dispatch({\n      type: 'UPDATE_CAR',\n      payload: carData\n    });\n  };\n  const deleteCar = carId => {\n    dispatch({\n      type: 'DELETE_CAR',\n      payload: carId\n    });\n  };\n  const value = {\n    cars: state.cars,\n    addCar,\n    updateCar,\n    deleteCar\n  };\n  return /*#__PURE__*/_jsxDEV(CarsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(CarsProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CarsProvider;\nexport const useCars = () => {\n  _s2();\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n_s2(useCars, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CarsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","seedCars","jsxDEV","_jsxDEV","CarsContext","initialState","cars","lastId","carsReducer","state","action","type","payload","length","newCar","id","String","map","car","filter","CarsProvider","children","_s","dispatch","console","log","localStorage","setItem","JSON","stringify","addCar","carData","updateCar","deleteCar","carId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCars","_s2","context","Error","$RefreshReg$"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { seedCars } from '../store/seed';\n\nconst CarsContext = createContext();\n\nconst initialState = {\n  cars: [],\n  lastId: 0\n};\n\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT_CARS':\n      return {\n        cars: action.payload,\n        lastId: action.payload.length\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1)\n      };\n      return {\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => \n          car.id === action.payload.id ? action.payload : car\n        )\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CarsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from localStorage or seed data\n  useEffect(() => {\n    // Force load from seed data for now to debug\n    console.log('Seed cars available:', seedCars.length);\n    console.log('Seed cars:', seedCars);\n    \n    // Temporarily force load from seed data\n    dispatch({ type: 'INIT_CARS', payload: seedCars });\n    \n    // Comment out localStorage logic for debugging\n    /*\n    const savedCars = localStorage.getItem('cars-state-v2');\n    if (savedCars) {\n      try {\n        const parsed = JSON.parse(savedCars);\n        console.log('Loading cars from localStorage:', parsed.cars.length);\n        dispatch({ type: 'INIT_CARS', payload: parsed.cars });\n      } catch (error) {\n        console.error('Error parsing saved cars:', error);\n        console.log('Loading cars from seed data:', seedCars.length);\n        dispatch({ type: 'INIT_CARS', payload: seedCars });\n      }\n    } else {\n      console.log('No saved cars found, loading from seed data:', seedCars.length);\n      dispatch({ type: 'INIT_CARS', payload: seedCars });\n    }\n    */\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    localStorage.setItem('cars-state-v2', JSON.stringify({ // Updated version\n      cars: state.cars,\n      lastId: state.lastId\n    }));\n  }, [state.cars, state.lastId]);\n\n  const addCar = (carData) => {\n    dispatch({ type: 'ADD_CAR', payload: carData });\n  };\n\n  const updateCar = (carData) => {\n    dispatch({ type: 'UPDATE_CAR', payload: carData });\n  };\n\n  const deleteCar = (carId) => {\n    dispatch({ type: 'DELETE_CAR', payload: carId });\n  };\n\n  const value = {\n    cars: state.cars,\n    addCar,\n    updateCar,\n    deleteCar\n  };\n\n  return (\n    <CarsContext.Provider value={value}>\n      {children}\n    </CarsContext.Provider>\n  );\n};\n\nexport const useCars = () => {\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}