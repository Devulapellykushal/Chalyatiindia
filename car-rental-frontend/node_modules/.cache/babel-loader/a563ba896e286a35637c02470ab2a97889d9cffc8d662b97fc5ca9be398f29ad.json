{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('admin-token');\n  }\n  setToken(token) {\n    this.token = token;\n    if (token) {\n      localStorage.setItem('admin-token', token);\n    } else {\n      localStorage.removeItem('admin-token');\n    }\n  }\n  getHeaders() {\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    return headers;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getHeaders(),\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\n      }\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Car API methods\n  async getCars(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const endpoint = queryString ? `/cars?${queryString}` : '/cars';\n    return this.request(endpoint);\n  }\n  async getCarById(id) {\n    return this.request(`/cars/${id}`);\n  }\n  async getFeaturedCars(limit = 6) {\n    return this.request(`/cars/featured?limit=${limit}`);\n  }\n  async getCarStats() {\n    return this.request('/cars/stats');\n  }\n  async getCarOptions() {\n    return this.request('/cars/options');\n  }\n  async createCar(carData) {\n    return this.request('/cars', {\n      method: 'POST',\n      body: JSON.stringify(carData)\n    });\n  }\n  async updateCar(id, carData) {\n    return this.request(`/cars/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(carData)\n    });\n  }\n  async deleteCar(id) {\n    return this.request(`/cars/${id}`, {\n      method: 'DELETE'\n    });\n  }\n  async toggleFeatured(id) {\n    return this.request(`/cars/${id}/featured`, {\n      method: 'PATCH'\n    });\n  }\n  async updateCarStatus(id, status) {\n    return this.request(`/cars/${id}/status`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        status\n      })\n    });\n  }\n\n  // Admin API methods\n  async adminLogin(password) {\n    const response = await this.request('/admin/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        password\n      })\n    });\n    if (response.success && response.token) {\n      this.setToken(response.token);\n    }\n    return response;\n  }\n  async getAdminDashboard() {\n    return this.request('/admin/dashboard');\n  }\n  async getAdminCars(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const endpoint = queryString ? `/admin/cars?${queryString}` : '/admin/cars';\n    return this.request(endpoint);\n  }\n  async adminCreateCar(carData) {\n    return this.request('/admin/cars', {\n      method: 'POST',\n      body: JSON.stringify(carData)\n    });\n  }\n  async adminUpdateCar(id, carData) {\n    return this.request(`/admin/cars/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(carData)\n    });\n  }\n  async adminDeleteCar(id) {\n    return this.request(`/admin/cars/${id}`, {\n      method: 'DELETE'\n    });\n  }\n  async adminToggleFeatured(id) {\n    return this.request(`/admin/cars/${id}/featured`, {\n      method: 'PATCH'\n    });\n  }\n  async seedDatabase() {\n    return this.request('/admin/seed', {\n      method: 'POST'\n    });\n  }\n  async clearDatabase() {\n    return this.request('/admin/clear', {\n      method: 'DELETE'\n    });\n  }\n\n  // Health check\n  async healthCheck() {\n    return this.request('/health');\n  }\n\n  // Image upload methods\n  async uploadImage(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    const response = await fetch(`${this.baseURL}/upload/single`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Authorization': this.token ? `Bearer ${this.token}` : ''\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n    return response.json();\n  }\n  async uploadMultipleImages(files) {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n    const response = await fetch(`${this.baseURL}/upload/multiple`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Authorization': this.token ? `Bearer ${this.token}` : ''\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n    return response.json();\n  }\n  getImageUrl(filename) {\n    return `${this.baseURL}/upload/${filename}`;\n  }\n}\n\n// Create and export a singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","token","localStorage","getItem","setToken","setItem","removeItem","getHeaders","headers","request","endpoint","options","url","config","response","fetch","data","json","ok","Error","message","status","error","console","getCars","params","queryString","URLSearchParams","toString","getCarById","id","getFeaturedCars","limit","getCarStats","getCarOptions","createCar","carData","method","body","JSON","stringify","updateCar","deleteCar","toggleFeatured","updateCarStatus","adminLogin","password","success","getAdminDashboard","getAdminCars","adminCreateCar","adminUpdateCar","adminDeleteCar","adminToggleFeatured","seedDatabase","clearDatabase","healthCheck","uploadImage","file","formData","FormData","append","statusText","uploadMultipleImages","files","forEach","getImageUrl","filename","apiService"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.token = localStorage.getItem('admin-token');\n  }\n\n  setToken(token) {\n    this.token = token;\n    if (token) {\n      localStorage.setItem('admin-token', token);\n    } else {\n      localStorage.removeItem('admin-token');\n    }\n  }\n\n  getHeaders() {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n\n    return headers;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getHeaders(),\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || `HTTP error! status: ${response.status}`);\n      }\n\n      return data;\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Car API methods\n  async getCars(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const endpoint = queryString ? `/cars?${queryString}` : '/cars';\n    return this.request(endpoint);\n  }\n\n  async getCarById(id) {\n    return this.request(`/cars/${id}`);\n  }\n\n  async getFeaturedCars(limit = 6) {\n    return this.request(`/cars/featured?limit=${limit}`);\n  }\n\n  async getCarStats() {\n    return this.request('/cars/stats');\n  }\n\n  async getCarOptions() {\n    return this.request('/cars/options');\n  }\n\n  async createCar(carData) {\n    return this.request('/cars', {\n      method: 'POST',\n      body: JSON.stringify(carData),\n    });\n  }\n\n  async updateCar(id, carData) {\n    return this.request(`/cars/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(carData),\n    });\n  }\n\n  async deleteCar(id) {\n    return this.request(`/cars/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async toggleFeatured(id) {\n    return this.request(`/cars/${id}/featured`, {\n      method: 'PATCH',\n    });\n  }\n\n  async updateCarStatus(id, status) {\n    return this.request(`/cars/${id}/status`, {\n      method: 'PATCH',\n      body: JSON.stringify({ status }),\n    });\n  }\n\n  // Admin API methods\n  async adminLogin(password) {\n    const response = await this.request('/admin/login', {\n      method: 'POST',\n      body: JSON.stringify({ password }),\n    });\n    \n    if (response.success && response.token) {\n      this.setToken(response.token);\n    }\n    \n    return response;\n  }\n\n  async getAdminDashboard() {\n    return this.request('/admin/dashboard');\n  }\n\n  async getAdminCars(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    const endpoint = queryString ? `/admin/cars?${queryString}` : '/admin/cars';\n    return this.request(endpoint);\n  }\n\n  async adminCreateCar(carData) {\n    return this.request('/admin/cars', {\n      method: 'POST',\n      body: JSON.stringify(carData),\n    });\n  }\n\n  async adminUpdateCar(id, carData) {\n    return this.request(`/admin/cars/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(carData),\n    });\n  }\n\n  async adminDeleteCar(id) {\n    return this.request(`/admin/cars/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async adminToggleFeatured(id) {\n    return this.request(`/admin/cars/${id}/featured`, {\n      method: 'PATCH',\n    });\n  }\n\n  async seedDatabase() {\n    return this.request('/admin/seed', {\n      method: 'POST',\n    });\n  }\n\n  async clearDatabase() {\n    return this.request('/admin/clear', {\n      method: 'DELETE',\n    });\n  }\n\n  // Health check\n  async healthCheck() {\n    return this.request('/health');\n  }\n\n  // Image upload methods\n  async uploadImage(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n\n    const response = await fetch(`${this.baseURL}/upload/single`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Authorization': this.token ? `Bearer ${this.token}` : '',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async uploadMultipleImages(files) {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n\n    const response = await fetch(`${this.baseURL}/upload/multiple`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Authorization': this.token ? `Bearer ${this.token}` : '',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  getImageUrl(filename) {\n    return `${this.baseURL}/upload/${filename}`;\n  }\n}\n\n// Create and export a singleton instance\nconst apiService = new ApiService();\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}