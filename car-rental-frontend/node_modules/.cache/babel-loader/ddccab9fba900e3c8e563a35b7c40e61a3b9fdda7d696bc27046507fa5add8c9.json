{"ast":null,"code":"/**\n * Utility function to handle car image paths\n * @param {string} imagePath - The image path from the car data\n * @returns {string} - The processed image URL\n */\nexport const getCarImageUrl = imagePath => {\n  console.log('getCarImageUrl called with:', imagePath);\n  if (!imagePath) {\n    console.log('No image path, returning placeholder');\n    return '/img/placeholder.svg';\n  }\n\n  // If it's already a full URL or data URL, use it as is\n  if (imagePath.startsWith('http') || imagePath.startsWith('data:')) {\n    console.log('Full URL detected, returning as is:', imagePath);\n    return imagePath;\n  }\n\n  // For uploaded images, construct full URL\n  if (imagePath.startsWith('/uploads/')) {\n    const fullUrl = `http://localhost:5000${imagePath}`;\n    console.log('Uploaded image detected, returning:', fullUrl);\n    return fullUrl;\n  }\n\n  // For relative paths, try to import from assets\n  try {\n    // Remove /src/assets/ prefix and get just the filename\n    const filename = imagePath.replace('/src/assets/', '');\n    const assetUrl = `/assets/${filename}`;\n    console.log('Asset image detected, returning:', assetUrl);\n    return assetUrl;\n  } catch (error) {\n    console.warn(`Could not load image: ${imagePath}`, error);\n    return '/img/placeholder.svg';\n  }\n};\n\n/**\n * Process an array of image paths\n * @param {Array} images - Array of image paths\n * @returns {Array} - Array of processed image URLs\n */\nexport const processCarImages = images => {\n  if (!images || images.length === 0) {\n    return ['/img/placeholder.svg'];\n  }\n  return images.map(getCarImageUrl);\n};","map":{"version":3,"names":["getCarImageUrl","imagePath","console","log","startsWith","fullUrl","filename","replace","assetUrl","error","warn","processCarImages","images","length","map"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/utils/imageUtils.js"],"sourcesContent":["/**\n * Utility function to handle car image paths\n * @param {string} imagePath - The image path from the car data\n * @returns {string} - The processed image URL\n */\nexport const getCarImageUrl = (imagePath) => {\n  console.log('getCarImageUrl called with:', imagePath);\n  \n  if (!imagePath) {\n    console.log('No image path, returning placeholder');\n    return '/img/placeholder.svg';\n  }\n  \n  // If it's already a full URL or data URL, use it as is\n  if (imagePath.startsWith('http') || imagePath.startsWith('data:')) {\n    console.log('Full URL detected, returning as is:', imagePath);\n    return imagePath;\n  }\n  \n  // For uploaded images, construct full URL\n  if (imagePath.startsWith('/uploads/')) {\n    const fullUrl = `http://localhost:5000${imagePath}`;\n    console.log('Uploaded image detected, returning:', fullUrl);\n    return fullUrl;\n  }\n  \n  // For relative paths, try to import from assets\n  try {\n    // Remove /src/assets/ prefix and get just the filename\n    const filename = imagePath.replace('/src/assets/', '');\n    const assetUrl = `/assets/${filename}`;\n    console.log('Asset image detected, returning:', assetUrl);\n    return assetUrl;\n  } catch (error) {\n    console.warn(`Could not load image: ${imagePath}`, error);\n    return '/img/placeholder.svg';\n  }\n};\n\n/**\n * Process an array of image paths\n * @param {Array} images - Array of image paths\n * @returns {Array} - Array of processed image URLs\n */\nexport const processCarImages = (images) => {\n  if (!images || images.length === 0) {\n    return ['/img/placeholder.svg'];\n  }\n  \n  return images.map(getCarImageUrl);\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAIC,SAAS,IAAK;EAC3CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,SAAS,CAAC;EAErD,IAAI,CAACA,SAAS,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnD,OAAO,sBAAsB;EAC/B;;EAEA;EACA,IAAIF,SAAS,CAACG,UAAU,CAAC,MAAM,CAAC,IAAIH,SAAS,CAACG,UAAU,CAAC,OAAO,CAAC,EAAE;IACjEF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,SAAS,CAAC;IAC7D,OAAOA,SAAS;EAClB;;EAEA;EACA,IAAIA,SAAS,CAACG,UAAU,CAAC,WAAW,CAAC,EAAE;IACrC,MAAMC,OAAO,GAAG,wBAAwBJ,SAAS,EAAE;IACnDC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEE,OAAO,CAAC;IAC3D,OAAOA,OAAO;EAChB;;EAEA;EACA,IAAI;IACF;IACA,MAAMC,QAAQ,GAAGL,SAAS,CAACM,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IACtD,MAAMC,QAAQ,GAAG,WAAWF,QAAQ,EAAE;IACtCJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEK,QAAQ,CAAC;IACzD,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,OAAO,CAACQ,IAAI,CAAC,yBAAyBT,SAAS,EAAE,EAAEQ,KAAK,CAAC;IACzD,OAAO,sBAAsB;EAC/B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,gBAAgB,GAAIC,MAAM,IAAK;EAC1C,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IAClC,OAAO,CAAC,sBAAsB,CAAC;EACjC;EAEA,OAAOD,MAAM,CAACE,GAAG,CAACd,cAAc,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}