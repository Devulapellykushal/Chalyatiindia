{"ast":null,"code":"var _jsxFileName = \"/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cars: [],\n  lastId: 0,\n  loading: false,\n  error: null\n};\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    case 'INIT_CARS':\n      return {\n        ...state,\n        cars: action.payload,\n        lastId: action.payload.length,\n        loading: false,\n        error: null\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      return {\n        ...state,\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1,\n        error: null\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => car.id === action.payload.id ? {\n          ...action.payload,\n          updatedAt: new Date().toISOString()\n        } : car),\n        error: null\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload),\n        error: null\n      };\n    case 'BULK_UPDATE':\n      return {\n        ...state,\n        cars: action.payload,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const CarsProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from API\n  useEffect(() => {\n    const initializeCars = async () => {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n\n      // Clear ALL localStorage keys related to cars\n      const keysToRemove = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.includes('cars')) {\n          keysToRemove.push(key);\n        }\n      }\n      keysToRemove.forEach(key => localStorage.removeItem(key));\n      try {\n        const response = await apiService.getCars();\n        if (response.success) {\n          dispatch({\n            type: 'INIT_CARS',\n            payload: response.data\n          });\n        } else {\n          throw new Error(response.message || 'Failed to fetch cars');\n        }\n      } catch (error) {\n        console.error('Error fetching cars from API:', error);\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load cars data. Please check if the backend server is running.'\n        });\n      }\n    };\n    initializeCars();\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    if (state.cars.length > 0) {\n      try {\n        localStorage.setItem('cars-state-v2', JSON.stringify({\n          cars: state.cars,\n          lastId: state.lastId\n        }));\n      } catch (error) {\n        console.error('Error saving to localStorage:', error);\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to save data locally'\n        });\n      }\n    }\n  }, [state.cars, state.lastId]);\n\n  // Validation function\n  const validateCarData = carData => {\n    const errors = [];\n    if (!carData.title || carData.title.trim().length < 2) {\n      errors.push('Title must be at least 2 characters long');\n    }\n    if (!carData.brand || carData.brand.trim().length === 0) {\n      errors.push('Brand is required');\n    }\n    if (!carData.type || carData.type.trim().length === 0) {\n      errors.push('Type is required');\n    }\n    if (!carData.transmission || carData.transmission.trim().length === 0) {\n      errors.push('Transmission is required');\n    }\n    if (!carData.fuel || carData.fuel.trim().length === 0) {\n      errors.push('Fuel type is required');\n    }\n    if (!carData.pricePerDay || isNaN(carData.pricePerDay) || carData.pricePerDay < 0) {\n      errors.push('Price per month must be a positive number');\n    }\n    if (!carData.seats || isNaN(carData.seats) || carData.seats < 1 || carData.seats > 10) {\n      errors.push('Seats must be between 1 and 10');\n    }\n    if (!carData.mileageKm || isNaN(carData.mileageKm) || carData.mileageKm < 0) {\n      errors.push('Mileage must be a positive number');\n    }\n    return errors;\n  };\n  const addCar = async (carData, files = []) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errors.join(', ')\n        });\n        return false;\n      }\n\n      // Process car data - don't process images here, let the API handle it\n      const processedCarData = {\n        ...carData,\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n\n      // Remove images from processedCarData if files are provided\n      if (files && files.length > 0) {\n        delete processedCarData.images;\n      }\n\n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin ? await apiService.adminCreateCar(processedCarData, files) : await apiService.createCar(processedCarData);\n        if (response.success) {\n          dispatch({\n            type: 'ADD_CAR',\n            payload: response.data\n          });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({\n          type: 'ADD_CAR',\n          payload: processedCarData\n        });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error adding car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to add car'\n      });\n      return false;\n    }\n  };\n  const updateCar = async (carData, files = []) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errors.join(', ')\n        });\n        return false;\n      }\n\n      // Process car data - don't process images here, let the API handle it\n      const processedCarData = {\n        ...carData,\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n\n      // Remove images from processedCarData if files are provided\n      if (files && files.length > 0) {\n        delete processedCarData.images;\n      }\n\n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin ? await apiService.adminUpdateCar(carData.id, processedCarData, files) : await apiService.updateCar(carData.id, processedCarData);\n        if (response.success) {\n          dispatch({\n            type: 'UPDATE_CAR',\n            payload: response.data\n          });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({\n          type: 'UPDATE_CAR',\n          payload: processedCarData\n        });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error updating car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to update car'\n      });\n      return false;\n    }\n  };\n  const deleteCar = async carId => {\n    try {\n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin ? await apiService.adminDeleteCar(carId) : await apiService.deleteCar(carId);\n        if (response.success) {\n          dispatch({\n            type: 'DELETE_CAR',\n            payload: carId\n          });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({\n          type: 'DELETE_CAR',\n          payload: carId\n        });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error deleting car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to delete car'\n      });\n      return false;\n    }\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const refreshCars = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n\n      // Clear ALL localStorage keys related to cars\n      const keysToRemove = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.includes('cars')) {\n          keysToRemove.push(key);\n        }\n      }\n      keysToRemove.forEach(key => localStorage.removeItem(key));\n      console.log('Cleared all car-related localStorage keys before refresh:', keysToRemove);\n      const response = await apiService.getCars();\n      if (response.success) {\n        console.log('Cars refreshed from API:', response.data.length);\n        console.log('Sample refreshed car data:', response.data[0]);\n        dispatch({\n          type: 'INIT_CARS',\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      console.error('Error refreshing cars:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to refresh cars data'\n      });\n    }\n  };\n  const getCarById = id => {\n    return state.cars.find(car => car.id === id);\n  };\n  const getCarsByBrand = brand => {\n    return state.cars.filter(car => car.brand === brand);\n  };\n  const getCarsByType = type => {\n    return state.cars.filter(car => car.type === type);\n  };\n  const getFeaturedCars = () => {\n    return state.cars.filter(car => car.featured);\n  };\n  const getCarsByPriceRange = (minPrice, maxPrice) => {\n    return state.cars.filter(car => car.pricePerDay >= minPrice && car.pricePerDay <= maxPrice);\n  };\n  const searchCars = query => {\n    const searchTerm = query.toLowerCase();\n    return state.cars.filter(car => {\n      var _car$description;\n      return car.title.toLowerCase().includes(searchTerm) || car.brand.toLowerCase().includes(searchTerm) || ((_car$description = car.description) === null || _car$description === void 0 ? void 0 : _car$description.toLowerCase().includes(searchTerm));\n    });\n  };\n\n  // Additional utility functions for filtering and statistics\n  const getCarsByTransmission = transmission => {\n    return state.cars.filter(car => car.transmission === transmission);\n  };\n  const getCarsByFuelType = fuelType => {\n    return state.cars.filter(car => car.fuel === fuelType);\n  };\n  const getCarsByYearRange = (minYear, maxYear) => {\n    return state.cars.filter(car => car.yearOfManufacture && car.yearOfManufacture >= minYear && car.yearOfManufacture <= maxYear);\n  };\n  const getCarsByMileageRange = (minMileage, maxMileage) => {\n    return state.cars.filter(car => car.mileageKm >= minMileage && car.mileageKm <= maxMileage);\n  };\n  const getAvailableBrands = () => {\n    return [...new Set(state.cars.map(car => car.brand))].sort();\n  };\n  const getAvailableTypes = () => {\n    return [...new Set(state.cars.map(car => car.type))].sort();\n  };\n  const getAvailableTransmissions = () => {\n    return [...new Set(state.cars.map(car => car.transmission))].sort();\n  };\n  const getAvailableFuelTypes = () => {\n    return [...new Set(state.cars.map(car => car.fuel))].sort();\n  };\n  const getPriceStatistics = () => {\n    if (state.cars.length === 0) return {\n      min: 0,\n      max: 0,\n      average: 0,\n      median: 0\n    };\n    const prices = state.cars.map(car => car.pricePerDay).filter(price => price > 0).sort((a, b) => a - b);\n    if (prices.length === 0) return {\n      min: 0,\n      max: 0,\n      average: 0,\n      median: 0\n    };\n    const min = Math.min(...prices);\n    const max = Math.max(...prices);\n    const average = Math.round(prices.reduce((sum, price) => sum + price, 0) / prices.length);\n    const median = prices.length % 2 === 0 ? (prices[prices.length / 2 - 1] + prices[prices.length / 2]) / 2 : prices[Math.floor(prices.length / 2)];\n    return {\n      min,\n      max,\n      average,\n      median\n    };\n  };\n  const getInventoryStats = () => {\n    const totalCars = state.cars.length;\n    const featuredCars = state.cars.filter(car => car.featured).length;\n    const totalValue = state.cars.reduce((sum, car) => sum + (car.pricePerDay || 0), 0);\n    const avgPrice = totalCars > 0 ? Math.round(totalValue / totalCars) : 0;\n    const brandStats = {};\n    const typeStats = {};\n    const transmissionStats = {};\n    const fuelStats = {};\n    state.cars.forEach(car => {\n      brandStats[car.brand] = (brandStats[car.brand] || 0) + 1;\n      typeStats[car.type] = (typeStats[car.type] || 0) + 1;\n      transmissionStats[car.transmission] = (transmissionStats[car.transmission] || 0) + 1;\n      fuelStats[car.fuel] = (fuelStats[car.fuel] || 0) + 1;\n    });\n    return {\n      totalCars,\n      featuredCars,\n      totalValue,\n      avgPrice,\n      brandStats,\n      typeStats,\n      transmissionStats,\n      fuelStats\n    };\n  };\n  const value = {\n    cars: state.cars,\n    loading: state.loading,\n    error: state.error,\n    addCar,\n    updateCar,\n    deleteCar,\n    clearError,\n    refreshCars,\n    getCarById,\n    getCarsByBrand,\n    getCarsByType,\n    getFeaturedCars,\n    getCarsByPriceRange,\n    searchCars,\n    getCarsByTransmission,\n    getCarsByFuelType,\n    getCarsByYearRange,\n    getCarsByMileageRange,\n    getAvailableBrands,\n    getAvailableTypes,\n    getAvailableTransmissions,\n    getAvailableFuelTypes,\n    getPriceStatistics,\n    getInventoryStats\n  };\n  return /*#__PURE__*/_jsxDEV(CarsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n_s(CarsProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CarsProvider;\nexport const useCars = () => {\n  _s2();\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n_s2(useCars, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CarsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","apiService","jsxDEV","_jsxDEV","CarsContext","initialState","cars","lastId","loading","error","carsReducer","state","action","type","payload","length","newCar","id","String","createdAt","Date","toISOString","updatedAt","map","car","filter","CarsProvider","children","_s","dispatch","initializeCars","keysToRemove","i","localStorage","key","includes","push","forEach","removeItem","response","getCars","success","data","Error","message","console","setItem","JSON","stringify","validateCarData","carData","errors","title","trim","brand","transmission","fuel","pricePerDay","isNaN","seats","mileageKm","addCar","files","join","processedCarData","parseInt","yearOfManufacture","featured","Boolean","images","isAdmin","getItem","adminCreateCar","createCar","apiError","warn","updateCar","adminUpdateCar","deleteCar","carId","adminDeleteCar","clearError","refreshCars","log","getCarById","find","getCarsByBrand","getCarsByType","getFeaturedCars","getCarsByPriceRange","minPrice","maxPrice","searchCars","query","searchTerm","toLowerCase","_car$description","description","getCarsByTransmission","getCarsByFuelType","fuelType","getCarsByYearRange","minYear","maxYear","getCarsByMileageRange","minMileage","maxMileage","getAvailableBrands","Set","sort","getAvailableTypes","getAvailableTransmissions","getAvailableFuelTypes","getPriceStatistics","min","max","average","median","prices","price","a","b","Math","round","reduce","sum","floor","getInventoryStats","totalCars","featuredCars","totalValue","avgPrice","brandStats","typeStats","transmissionStats","fuelStats","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCars","_s2","context","$RefreshReg$"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport apiService from '../services/api';\n\nconst CarsContext = createContext();\n\nconst initialState = {\n  cars: [],\n  lastId: 0,\n  loading: false,\n  error: null\n};\n\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    case 'INIT_CARS':\n      return {\n        ...state,\n        cars: action.payload,\n        lastId: action.payload.length,\n        loading: false,\n        error: null\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      return {\n        ...state,\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1,\n        error: null\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => \n          car.id === action.payload.id \n            ? { ...action.payload, updatedAt: new Date().toISOString() }\n            : car\n        ),\n        error: null\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload),\n        error: null\n      };\n    case 'BULK_UPDATE':\n      return {\n        ...state,\n        cars: action.payload,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CarsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from API\n  useEffect(() => {\n    const initializeCars = async () => {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      // Clear ALL localStorage keys related to cars\n      const keysToRemove = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.includes('cars')) {\n          keysToRemove.push(key);\n        }\n      }\n      keysToRemove.forEach(key => localStorage.removeItem(key));\n      \n      try {\n        const response = await apiService.getCars();\n        \n        if (response.success) {\n          dispatch({ type: 'INIT_CARS', payload: response.data });\n        } else {\n          throw new Error(response.message || 'Failed to fetch cars');\n        }\n      } catch (error) {\n        console.error('Error fetching cars from API:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to load cars data. Please check if the backend server is running.' });\n      }\n    };\n\n    initializeCars();\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    if (state.cars.length > 0) {\n      try {\n        localStorage.setItem('cars-state-v2', JSON.stringify({\n          cars: state.cars,\n          lastId: state.lastId\n        }));\n      } catch (error) {\n        console.error('Error saving to localStorage:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to save data locally' });\n      }\n    }\n  }, [state.cars, state.lastId]);\n\n  // Validation function\n  const validateCarData = (carData) => {\n    const errors = [];\n    \n    if (!carData.title || carData.title.trim().length < 2) {\n      errors.push('Title must be at least 2 characters long');\n    }\n    \n    if (!carData.brand || carData.brand.trim().length === 0) {\n      errors.push('Brand is required');\n    }\n    \n    if (!carData.type || carData.type.trim().length === 0) {\n      errors.push('Type is required');\n    }\n    \n    if (!carData.transmission || carData.transmission.trim().length === 0) {\n      errors.push('Transmission is required');\n    }\n    \n    if (!carData.fuel || carData.fuel.trim().length === 0) {\n      errors.push('Fuel type is required');\n    }\n    \n    if (!carData.pricePerDay || isNaN(carData.pricePerDay) || carData.pricePerDay < 0) {\n      errors.push('Price per month must be a positive number');\n    }\n    \n    if (!carData.seats || isNaN(carData.seats) || carData.seats < 1 || carData.seats > 10) {\n      errors.push('Seats must be between 1 and 10');\n    }\n    \n    if (!carData.mileageKm || isNaN(carData.mileageKm) || carData.mileageKm < 0) {\n      errors.push('Mileage must be a positive number');\n    }\n    \n    return errors;\n  };\n\n  const addCar = async (carData, files = []) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({ type: 'SET_ERROR', payload: errors.join(', ') });\n        return false;\n      }\n      \n      // Process car data - don't process images here, let the API handle it\n      const processedCarData = {\n        ...carData,\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      \n      // Remove images from processedCarData if files are provided\n      if (files && files.length > 0) {\n        delete processedCarData.images;\n      }\n      \n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin \n          ? await apiService.adminCreateCar(processedCarData, files)\n          : await apiService.createCar(processedCarData);\n        \n        if (response.success) {\n          dispatch({ type: 'ADD_CAR', payload: response.data });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({ type: 'ADD_CAR', payload: processedCarData });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error adding car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to add car' });\n      return false;\n    }\n  };\n\n  const updateCar = async (carData, files = []) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({ type: 'SET_ERROR', payload: errors.join(', ') });\n        return false;\n      }\n      \n      // Process car data - don't process images here, let the API handle it\n      const processedCarData = {\n        ...carData,\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      \n      // Remove images from processedCarData if files are provided\n      if (files && files.length > 0) {\n        delete processedCarData.images;\n      }\n      \n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin \n          ? await apiService.adminUpdateCar(carData.id, processedCarData, files)\n          : await apiService.updateCar(carData.id, processedCarData);\n        \n        if (response.success) {\n          dispatch({ type: 'UPDATE_CAR', payload: response.data });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({ type: 'UPDATE_CAR', payload: processedCarData });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error updating car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update car' });\n      return false;\n    }\n  };\n\n  const deleteCar = async (carId) => {\n    try {\n      // Try API first, fallback to local state\n      try {\n        // Check if user is admin (has token)\n        const isAdmin = localStorage.getItem('admin-token') || localStorage.getItem('admin-session');\n        const response = isAdmin \n          ? await apiService.adminDeleteCar(carId)\n          : await apiService.deleteCar(carId);\n        \n        if (response.success) {\n          dispatch({ type: 'DELETE_CAR', payload: carId });\n          return true;\n        }\n      } catch (apiError) {\n        console.warn('API call failed, using local state:', apiError);\n        dispatch({ type: 'DELETE_CAR', payload: carId });\n        return true;\n      }\n    } catch (error) {\n      console.error('Error deleting car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to delete car' });\n      return false;\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const refreshCars = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      // Clear ALL localStorage keys related to cars\n      const keysToRemove = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.includes('cars')) {\n          keysToRemove.push(key);\n        }\n      }\n      keysToRemove.forEach(key => localStorage.removeItem(key));\n      console.log('Cleared all car-related localStorage keys before refresh:', keysToRemove);\n      \n      const response = await apiService.getCars();\n      \n      if (response.success) {\n        console.log('Cars refreshed from API:', response.data.length);\n        console.log('Sample refreshed car data:', response.data[0]);\n        dispatch({ type: 'INIT_CARS', payload: response.data });\n      }\n    } catch (error) {\n      console.error('Error refreshing cars:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to refresh cars data' });\n    }\n  };\n\n  const getCarById = (id) => {\n    return state.cars.find(car => car.id === id);\n  };\n\n  const getCarsByBrand = (brand) => {\n    return state.cars.filter(car => car.brand === brand);\n  };\n\n  const getCarsByType = (type) => {\n    return state.cars.filter(car => car.type === type);\n  };\n\n  const getFeaturedCars = () => {\n    return state.cars.filter(car => car.featured);\n  };\n\n  const getCarsByPriceRange = (minPrice, maxPrice) => {\n    return state.cars.filter(car => \n      car.pricePerDay >= minPrice && car.pricePerDay <= maxPrice\n    );\n  };\n\n  const searchCars = (query) => {\n    const searchTerm = query.toLowerCase();\n    return state.cars.filter(car =>\n      car.title.toLowerCase().includes(searchTerm) ||\n      car.brand.toLowerCase().includes(searchTerm) ||\n      car.description?.toLowerCase().includes(searchTerm)\n    );\n  };\n\n  // Additional utility functions for filtering and statistics\n  const getCarsByTransmission = (transmission) => {\n    return state.cars.filter(car => car.transmission === transmission);\n  };\n\n  const getCarsByFuelType = (fuelType) => {\n    return state.cars.filter(car => car.fuel === fuelType);\n  };\n\n  const getCarsByYearRange = (minYear, maxYear) => {\n    return state.cars.filter(car => \n      car.yearOfManufacture && \n      car.yearOfManufacture >= minYear && \n      car.yearOfManufacture <= maxYear\n    );\n  };\n\n  const getCarsByMileageRange = (minMileage, maxMileage) => {\n    return state.cars.filter(car => \n      car.mileageKm >= minMileage && car.mileageKm <= maxMileage\n    );\n  };\n\n  const getAvailableBrands = () => {\n    return [...new Set(state.cars.map(car => car.brand))].sort();\n  };\n\n  const getAvailableTypes = () => {\n    return [...new Set(state.cars.map(car => car.type))].sort();\n  };\n\n  const getAvailableTransmissions = () => {\n    return [...new Set(state.cars.map(car => car.transmission))].sort();\n  };\n\n  const getAvailableFuelTypes = () => {\n    return [...new Set(state.cars.map(car => car.fuel))].sort();\n  };\n\n  const getPriceStatistics = () => {\n    if (state.cars.length === 0) return { min: 0, max: 0, average: 0, median: 0 };\n    \n    const prices = state.cars\n      .map(car => car.pricePerDay)\n      .filter(price => price > 0)\n      .sort((a, b) => a - b);\n    \n    if (prices.length === 0) return { min: 0, max: 0, average: 0, median: 0 };\n    \n    const min = Math.min(...prices);\n    const max = Math.max(...prices);\n    const average = Math.round(prices.reduce((sum, price) => sum + price, 0) / prices.length);\n    const median = prices.length % 2 === 0 \n      ? (prices[prices.length / 2 - 1] + prices[prices.length / 2]) / 2\n      : prices[Math.floor(prices.length / 2)];\n    \n    return { min, max, average, median };\n  };\n\n  const getInventoryStats = () => {\n    const totalCars = state.cars.length;\n    const featuredCars = state.cars.filter(car => car.featured).length;\n    const totalValue = state.cars.reduce((sum, car) => sum + (car.pricePerDay || 0), 0);\n    const avgPrice = totalCars > 0 ? Math.round(totalValue / totalCars) : 0;\n    \n    const brandStats = {};\n    const typeStats = {};\n    const transmissionStats = {};\n    const fuelStats = {};\n    \n    state.cars.forEach(car => {\n      brandStats[car.brand] = (brandStats[car.brand] || 0) + 1;\n      typeStats[car.type] = (typeStats[car.type] || 0) + 1;\n      transmissionStats[car.transmission] = (transmissionStats[car.transmission] || 0) + 1;\n      fuelStats[car.fuel] = (fuelStats[car.fuel] || 0) + 1;\n    });\n    \n    return {\n      totalCars,\n      featuredCars,\n      totalValue,\n      avgPrice,\n      brandStats,\n      typeStats,\n      transmissionStats,\n      fuelStats\n    };\n  };\n\n  const value = {\n    cars: state.cars,\n    loading: state.loading,\n    error: state.error,\n    addCar,\n    updateCar,\n    deleteCar,\n    clearError,\n    refreshCars,\n    getCarById,\n    getCarsByBrand,\n    getCarsByType,\n    getFeaturedCars,\n    getCarsByPriceRange,\n    searchCars,\n    getCarsByTransmission,\n    getCarsByFuelType,\n    getCarsByYearRange,\n    getCarsByMileageRange,\n    getAvailableBrands,\n    getAvailableTypes,\n    getAvailableTransmissions,\n    getAvailableFuelTypes,\n    getPriceStatistics,\n    getInventoryStats\n  };\n\n  return (\n    <CarsContext.Provider value={value}>\n      {children}\n    </CarsContext.Provider>\n  );\n};\n\nexport const useCars = () => {\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}