{"ast":null,"code":"var _jsxFileName = \"/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/components/Squares.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport './Squares.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Squares = ({\n  direction = 'right',\n  speed = 1,\n  borderColor = '#999',\n  squareSize = 40,\n  hoverFillColor = '#222',\n  className = ''\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const requestRef = useRef(null);\n  const gridOffset = useRef({\n    x: 0,\n    y: 0\n  });\n  const hoveredSquare = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const resizeCanvas = () => {\n      // Set canvas size to match container\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n    };\n\n    // Initial resize\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    const drawGrid = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw grid lines\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = 1;\n\n      // Vertical lines\n      for (let x = 0; x <= canvas.width; x += squareSize) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n      }\n\n      // Horizontal lines\n      for (let y = 0; y <= canvas.height; y += squareSize) {\n        ctx.beginPath();\n        ctx.moveTo(0, y);\n        ctx.lineTo(canvas.width, y);\n        ctx.stroke();\n      }\n    };\n    const updateAnimation = () => {\n      const effectiveSpeed = Math.max(speed, 0.1);\n      switch (direction) {\n        case 'right':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'left':\n          gridOffset.current.x = (gridOffset.current.x + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'up':\n          gridOffset.current.y = (gridOffset.current.y + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'down':\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'diagonal':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        default:\n          break;\n      }\n      drawGrid();\n      requestRef.current = requestAnimationFrame(updateAnimation);\n    };\n    const handleMouseMove = event => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = event.clientX - rect.left;\n      const mouseY = event.clientY - rect.top;\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n      const hoveredSquareX = Math.floor((mouseX + gridOffset.current.x - startX) / squareSize);\n      const hoveredSquareY = Math.floor((mouseY + gridOffset.current.y - startY) / squareSize);\n      if (!hoveredSquare.current || hoveredSquare.current.x !== hoveredSquareX || hoveredSquare.current.y !== hoveredSquareY) {\n        hoveredSquare.current = {\n          x: hoveredSquareX,\n          y: hoveredSquareY\n        };\n      }\n    };\n    const handleMouseLeave = () => {\n      hoveredSquare.current = null;\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n    requestRef.current = requestAnimationFrame(updateAnimation);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(requestRef.current);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [direction, speed, borderColor, hoverFillColor, squareSize]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: `squares-canvas ${className}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n_s(Squares, \"rnuBt6Kk+puJYiRHTfdDXlLE3CY=\");\n_c = Squares;\nexport default Squares;\nvar _c;\n$RefreshReg$(_c, \"Squares\");","map":{"version":3,"names":["useEffect","useRef","jsxDEV","_jsxDEV","Squares","direction","speed","borderColor","squareSize","hoverFillColor","className","_s","canvasRef","requestRef","gridOffset","x","y","hoveredSquare","canvas","current","ctx","getContext","resizeCanvas","width","offsetWidth","height","offsetHeight","window","addEventListener","drawGrid","clearRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","updateAnimation","effectiveSpeed","Math","max","requestAnimationFrame","handleMouseMove","event","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","startX","floor","startY","hoveredSquareX","hoveredSquareY","handleMouseLeave","removeEventListener","cancelAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/components/Squares.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport './Squares.css';\n\nconst Squares = ({\n  direction = 'right',\n  speed = 1,\n  borderColor = '#999',\n  squareSize = 40,\n  hoverFillColor = '#222',\n  className = ''\n}) => {\n  const canvasRef = useRef(null);\n  const requestRef = useRef(null);\n  const gridOffset = useRef({ x: 0, y: 0 });\n  const hoveredSquare = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n\n    const resizeCanvas = () => {\n      // Set canvas size to match container\n      canvas.width = canvas.offsetWidth;\n      canvas.height = canvas.offsetHeight;\n    };\n\n    // Initial resize\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    const drawGrid = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw grid lines\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = 1;\n\n      // Vertical lines\n      for (let x = 0; x <= canvas.width; x += squareSize) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n      }\n\n      // Horizontal lines\n      for (let y = 0; y <= canvas.height; y += squareSize) {\n        ctx.beginPath();\n        ctx.moveTo(0, y);\n        ctx.lineTo(canvas.width, y);\n        ctx.stroke();\n      }\n    };\n\n    const updateAnimation = () => {\n      const effectiveSpeed = Math.max(speed, 0.1);\n      switch (direction) {\n        case 'right':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'left':\n          gridOffset.current.x = (gridOffset.current.x + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'up':\n          gridOffset.current.y = (gridOffset.current.y + effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'down':\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        case 'diagonal':\n          gridOffset.current.x = (gridOffset.current.x - effectiveSpeed + squareSize) % squareSize;\n          gridOffset.current.y = (gridOffset.current.y - effectiveSpeed + squareSize) % squareSize;\n          break;\n        default:\n          break;\n      }\n\n      drawGrid();\n      requestRef.current = requestAnimationFrame(updateAnimation);\n    };\n\n    const handleMouseMove = event => {\n      const rect = canvas.getBoundingClientRect();\n      const mouseX = event.clientX - rect.left;\n      const mouseY = event.clientY - rect.top;\n\n      const startX = Math.floor(gridOffset.current.x / squareSize) * squareSize;\n      const startY = Math.floor(gridOffset.current.y / squareSize) * squareSize;\n\n      const hoveredSquareX = Math.floor((mouseX + gridOffset.current.x - startX) / squareSize);\n      const hoveredSquareY = Math.floor((mouseY + gridOffset.current.y - startY) / squareSize);\n\n      if (\n        !hoveredSquare.current ||\n        hoveredSquare.current.x !== hoveredSquareX ||\n        hoveredSquare.current.y !== hoveredSquareY\n      ) {\n        hoveredSquare.current = { x: hoveredSquareX, y: hoveredSquareY };\n      }\n    };\n\n    const handleMouseLeave = () => {\n      hoveredSquare.current = null;\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    requestRef.current = requestAnimationFrame(updateAnimation);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(requestRef.current);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n    };\n  }, [direction, speed, borderColor, hoverFillColor, squareSize]);\n\n  return <canvas ref={canvasRef} className={`squares-canvas ${className}`}></canvas>;\n};\n\nexport default Squares;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EACfC,SAAS,GAAG,OAAO;EACnBC,KAAK,GAAG,CAAC;EACTC,WAAW,GAAG,MAAM;EACpBC,UAAU,GAAG,EAAE;EACfC,cAAc,GAAG,MAAM;EACvBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMY,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMa,UAAU,GAAGb,MAAM,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACzC,MAAMC,aAAa,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAGN,SAAS,CAACO,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB;MACAJ,MAAM,CAACK,KAAK,GAAGL,MAAM,CAACM,WAAW;MACjCN,MAAM,CAACO,MAAM,GAAGP,MAAM,CAACQ,YAAY;IACrC,CAAC;;IAED;IACAJ,YAAY,CAAC,CAAC;IACdK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEN,YAAY,CAAC;IAE/C,MAAMO,QAAQ,GAAGA,CAAA,KAAM;MACrBT,GAAG,CAACU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEZ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACO,MAAM,CAAC;;MAEhD;MACAL,GAAG,CAACW,WAAW,GAAGxB,WAAW;MAC7Ba,GAAG,CAACY,SAAS,GAAG,CAAC;;MAEjB;MACA,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIG,MAAM,CAACK,KAAK,EAAER,CAAC,IAAIP,UAAU,EAAE;QAClDY,GAAG,CAACa,SAAS,CAAC,CAAC;QACfb,GAAG,CAACc,MAAM,CAACnB,CAAC,EAAE,CAAC,CAAC;QAChBK,GAAG,CAACe,MAAM,CAACpB,CAAC,EAAEG,MAAM,CAACO,MAAM,CAAC;QAC5BL,GAAG,CAACgB,MAAM,CAAC,CAAC;MACd;;MAEA;MACA,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIE,MAAM,CAACO,MAAM,EAAET,CAAC,IAAIR,UAAU,EAAE;QACnDY,GAAG,CAACa,SAAS,CAAC,CAAC;QACfb,GAAG,CAACc,MAAM,CAAC,CAAC,EAAElB,CAAC,CAAC;QAChBI,GAAG,CAACe,MAAM,CAACjB,MAAM,CAACK,KAAK,EAAEP,CAAC,CAAC;QAC3BI,GAAG,CAACgB,MAAM,CAAC,CAAC;MACd;IACF,CAAC;IAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAClC,KAAK,EAAE,GAAG,CAAC;MAC3C,QAAQD,SAAS;QACf,KAAK,OAAO;UACVS,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAG,CAACD,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAGuB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxF;QACF,KAAK,MAAM;UACTM,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAG,CAACD,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAGuB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxF;QACF,KAAK,IAAI;UACPM,UAAU,CAACK,OAAO,CAACH,CAAC,GAAG,CAACF,UAAU,CAACK,OAAO,CAACH,CAAC,GAAGsB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxF;QACF,KAAK,MAAM;UACTM,UAAU,CAACK,OAAO,CAACH,CAAC,GAAG,CAACF,UAAU,CAACK,OAAO,CAACH,CAAC,GAAGsB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxF;QACF,KAAK,UAAU;UACbM,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAG,CAACD,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAGuB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxFM,UAAU,CAACK,OAAO,CAACH,CAAC,GAAG,CAACF,UAAU,CAACK,OAAO,CAACH,CAAC,GAAGsB,cAAc,GAAG9B,UAAU,IAAIA,UAAU;UACxF;QACF;UACE;MACJ;MAEAqB,QAAQ,CAAC,CAAC;MACVhB,UAAU,CAACM,OAAO,GAAGsB,qBAAqB,CAACJ,eAAe,CAAC;IAC7D,CAAC;IAED,MAAMK,eAAe,GAAGC,KAAK,IAAI;MAC/B,MAAMC,IAAI,GAAG1B,MAAM,CAAC2B,qBAAqB,CAAC,CAAC;MAC3C,MAAMC,MAAM,GAAGH,KAAK,CAACI,OAAO,GAAGH,IAAI,CAACI,IAAI;MACxC,MAAMC,MAAM,GAAGN,KAAK,CAACO,OAAO,GAAGN,IAAI,CAACO,GAAG;MAEvC,MAAMC,MAAM,GAAGb,IAAI,CAACc,KAAK,CAACvC,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAGP,UAAU,CAAC,GAAGA,UAAU;MACzE,MAAM8C,MAAM,GAAGf,IAAI,CAACc,KAAK,CAACvC,UAAU,CAACK,OAAO,CAACH,CAAC,GAAGR,UAAU,CAAC,GAAGA,UAAU;MAEzE,MAAM+C,cAAc,GAAGhB,IAAI,CAACc,KAAK,CAAC,CAACP,MAAM,GAAGhC,UAAU,CAACK,OAAO,CAACJ,CAAC,GAAGqC,MAAM,IAAI5C,UAAU,CAAC;MACxF,MAAMgD,cAAc,GAAGjB,IAAI,CAACc,KAAK,CAAC,CAACJ,MAAM,GAAGnC,UAAU,CAACK,OAAO,CAACH,CAAC,GAAGsC,MAAM,IAAI9C,UAAU,CAAC;MAExF,IACE,CAACS,aAAa,CAACE,OAAO,IACtBF,aAAa,CAACE,OAAO,CAACJ,CAAC,KAAKwC,cAAc,IAC1CtC,aAAa,CAACE,OAAO,CAACH,CAAC,KAAKwC,cAAc,EAC1C;QACAvC,aAAa,CAACE,OAAO,GAAG;UAAEJ,CAAC,EAAEwC,cAAc;UAAEvC,CAAC,EAAEwC;QAAe,CAAC;MAClE;IACF,CAAC;IAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BxC,aAAa,CAACE,OAAO,GAAG,IAAI;IAC9B,CAAC;IAEDD,MAAM,CAACU,gBAAgB,CAAC,WAAW,EAAEc,eAAe,CAAC;IACrDxB,MAAM,CAACU,gBAAgB,CAAC,YAAY,EAAE6B,gBAAgB,CAAC;IAEvD5C,UAAU,CAACM,OAAO,GAAGsB,qBAAqB,CAACJ,eAAe,CAAC;IAE3D,OAAO,MAAM;MACXV,MAAM,CAAC+B,mBAAmB,CAAC,QAAQ,EAAEpC,YAAY,CAAC;MAClDqC,oBAAoB,CAAC9C,UAAU,CAACM,OAAO,CAAC;MACxCD,MAAM,CAACwC,mBAAmB,CAAC,WAAW,EAAEhB,eAAe,CAAC;MACxDxB,MAAM,CAACwC,mBAAmB,CAAC,YAAY,EAAED,gBAAgB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACpD,SAAS,EAAEC,KAAK,EAAEC,WAAW,EAAEE,cAAc,EAAED,UAAU,CAAC,CAAC;EAE/D,oBAAOL,OAAA;IAAQyD,GAAG,EAAEhD,SAAU;IAACF,SAAS,EAAE,kBAAkBA,SAAS;EAAG;IAAAmD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AACpF,CAAC;AAACrD,EAAA,CAtHIP,OAAO;AAAA6D,EAAA,GAAP7D,OAAO;AAwHb,eAAeA,OAAO;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}