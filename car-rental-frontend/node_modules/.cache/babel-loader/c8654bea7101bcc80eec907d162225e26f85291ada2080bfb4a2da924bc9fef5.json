{"ast":null,"code":"var _jsxFileName = \"/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { seedCars } from '../store/seed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cars: [],\n  lastId: 0,\n  loading: false,\n  error: null\n};\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    case 'INIT_CARS':\n      return {\n        ...state,\n        cars: action.payload,\n        lastId: action.payload.length,\n        loading: false,\n        error: null\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      return {\n        ...state,\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1,\n        error: null\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => car.id === action.payload.id ? {\n          ...action.payload,\n          updatedAt: new Date().toISOString()\n        } : car),\n        error: null\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload),\n        error: null\n      };\n    case 'BULK_UPDATE':\n      return {\n        ...state,\n        cars: action.payload,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const CarsProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from localStorage or seed data\n  useEffect(() => {\n    const initializeCars = async () => {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      try {\n        // Force load from seed data for now to debug\n        console.log('Seed cars available:', seedCars.length);\n        console.log('Seed cars:', seedCars);\n\n        // Temporarily force load from seed data\n        dispatch({\n          type: 'INIT_CARS',\n          payload: seedCars\n        });\n\n        // Comment out localStorage logic for debugging\n        /*\n        const savedCars = localStorage.getItem('cars-state-v2');\n        if (savedCars) {\n          try {\n            const parsed = JSON.parse(savedCars);\n            console.log('Loading cars from localStorage:', parsed.cars.length);\n            dispatch({ type: 'INIT_CARS', payload: parsed.cars });\n          } catch (error) {\n            console.error('Error parsing saved cars:', error);\n            console.log('Loading cars from seed data:', seedCars.length);\n            dispatch({ type: 'INIT_CARS', payload: seedCars });\n          }\n        } else {\n          console.log('No saved cars found, loading from seed data:', seedCars.length);\n          dispatch({ type: 'INIT_CARS', payload: seedCars });\n        }\n        */\n      } catch (error) {\n        console.error('Error initializing cars:', error);\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to load cars data'\n        });\n      }\n    };\n    initializeCars();\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    if (state.cars.length > 0) {\n      try {\n        localStorage.setItem('cars-state-v2', JSON.stringify({\n          cars: state.cars,\n          lastId: state.lastId\n        }));\n      } catch (error) {\n        console.error('Error saving to localStorage:', error);\n        dispatch({\n          type: 'SET_ERROR',\n          payload: 'Failed to save data locally'\n        });\n      }\n    }\n  }, [state.cars, state.lastId]);\n\n  // Validation function\n  const validateCarData = carData => {\n    const errors = [];\n    if (!carData.title || carData.title.trim().length < 2) {\n      errors.push('Title must be at least 2 characters long');\n    }\n    if (!carData.brand || carData.brand.trim().length === 0) {\n      errors.push('Brand is required');\n    }\n    if (!carData.type || carData.type.trim().length === 0) {\n      errors.push('Type is required');\n    }\n    if (!carData.transmission || carData.transmission.trim().length === 0) {\n      errors.push('Transmission is required');\n    }\n    if (!carData.fuel || carData.fuel.trim().length === 0) {\n      errors.push('Fuel type is required');\n    }\n\n    // Validate fuel type is one of the allowed values\n    const allowedFuelTypes = ['Petrol', 'Diesel', 'EV', 'Hybrid'];\n    if (!allowedFuelTypes.includes(carData.fuel)) {\n      errors.push('Fuel type must be one of: Petrol, Diesel, EV, or Hybrid');\n    }\n    if (!carData.pricePerDay || isNaN(carData.pricePerDay) || carData.pricePerDay < 0) {\n      errors.push('Price per day must be a positive number');\n    }\n    if (!carData.seats || isNaN(carData.seats) || carData.seats < 1 || carData.seats > 10) {\n      errors.push('Seats must be between 1 and 10');\n    }\n    if (!carData.mileageKm || isNaN(carData.mileageKm) || carData.mileageKm < 0) {\n      errors.push('Mileage must be a positive number');\n    }\n\n    // Validate year of manufacture\n    if (carData.yearOfManufacture) {\n      const currentYear = new Date().getFullYear();\n      if (isNaN(carData.yearOfManufacture) || carData.yearOfManufacture < 1990 || carData.yearOfManufacture > currentYear + 1) {\n        errors.push(`Year of manufacture must be between 1990 and ${currentYear + 1}`);\n      }\n    }\n\n    // Validate owner information\n    if (!carData.ownerName || carData.ownerName.trim().length === 0) {\n      errors.push('Owner name is required');\n    }\n    if (!carData.contactNumber || carData.contactNumber.trim().length === 0) {\n      errors.push('Contact number is required');\n    }\n\n    // Validate contact number format (basic Indian phone number validation)\n    if (carData.contactNumber && carData.contactNumber !== 'â€”') {\n      const phoneRegex = /^[6-9]\\d{9}$/;\n      if (!phoneRegex.test(carData.contactNumber.replace(/\\D/g, ''))) {\n        errors.push('Contact number must be a valid 10-digit Indian mobile number');\n      }\n    }\n\n    // Validate images array\n    if (carData.images && Array.isArray(carData.images) && carData.images.length === 0) {\n      errors.push('At least one image is required');\n    }\n    return errors;\n  };\n  const addCar = carData => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errors.join(', ')\n        });\n        return false;\n      }\n\n      // Process images\n      const processedCarData = {\n        ...carData,\n        images: carData.images ? carData.images.split(',').map(img => img.trim()).filter(img => img) : [],\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      dispatch({\n        type: 'ADD_CAR',\n        payload: processedCarData\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to add car'\n      });\n      return false;\n    }\n  };\n  const updateCar = carData => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: errors.join(', ')\n        });\n        return false;\n      }\n\n      // Process images\n      const processedCarData = {\n        ...carData,\n        images: carData.images ? carData.images.split(',').map(img => img.trim()).filter(img => img) : [],\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      dispatch({\n        type: 'UPDATE_CAR',\n        payload: processedCarData\n      });\n      return true;\n    } catch (error) {\n      console.error('Error updating car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to update car'\n      });\n      return false;\n    }\n  };\n  const deleteCar = carId => {\n    try {\n      dispatch({\n        type: 'DELETE_CAR',\n        payload: carId\n      });\n      return true;\n    } catch (error) {\n      console.error('Error deleting car:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: 'Failed to delete car'\n      });\n      return false;\n    }\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const getCarById = id => {\n    return state.cars.find(car => car.id === id);\n  };\n  const getCarsByBrand = brand => {\n    return state.cars.filter(car => car.brand === brand);\n  };\n  const getCarsByType = type => {\n    return state.cars.filter(car => car.type === type);\n  };\n  const getFeaturedCars = () => {\n    return state.cars.filter(car => car.featured);\n  };\n  const getCarsByPriceRange = (minPrice, maxPrice) => {\n    return state.cars.filter(car => car.pricePerDay >= minPrice && car.pricePerDay <= maxPrice);\n  };\n  const searchCars = query => {\n    const searchTerm = query.toLowerCase();\n    return state.cars.filter(car => {\n      var _car$description;\n      return car.title.toLowerCase().includes(searchTerm) || car.brand.toLowerCase().includes(searchTerm) || ((_car$description = car.description) === null || _car$description === void 0 ? void 0 : _car$description.toLowerCase().includes(searchTerm));\n    });\n  };\n\n  // Additional utility functions for better database management\n  const getCarsByTransmission = transmission => {\n    return state.cars.filter(car => car.transmission === transmission);\n  };\n  const getCarsByFuelType = fuelType => {\n    return state.cars.filter(car => car.fuel === fuelType);\n  };\n  const getCarsByYearRange = (startYear, endYear) => {\n    return state.cars.filter(car => car.yearOfManufacture >= startYear && car.yearOfManufacture <= endYear);\n  };\n  const getCarsByMileageRange = (minMileage, maxMileage) => {\n    return state.cars.filter(car => car.mileageKm >= minMileage && car.mileageKm <= maxMileage);\n  };\n  const getAvailableBrands = () => {\n    return [...new Set(state.cars.map(car => car.brand))].sort();\n  };\n  const getAvailableTypes = () => {\n    return [...new Set(state.cars.map(car => car.type))].sort();\n  };\n  const getAvailableTransmissions = () => {\n    return [...new Set(state.cars.map(car => car.transmission))].sort();\n  };\n  const getAvailableFuelTypes = () => {\n    return [...new Set(state.cars.map(car => car.fuel))].sort();\n  };\n  const getPriceStatistics = () => {\n    if (state.cars.length === 0) return null;\n    const prices = state.cars.map(car => car.pricePerDay).filter(price => price > 0);\n    if (prices.length === 0) return null;\n    return {\n      min: Math.min(...prices),\n      max: Math.max(...prices),\n      average: Math.round(prices.reduce((sum, price) => sum + price, 0) / prices.length),\n      total: prices.reduce((sum, price) => sum + price, 0)\n    };\n  };\n  const getInventoryStats = () => {\n    const totalCars = state.cars.length;\n    const featuredCars = state.cars.filter(car => car.featured).length;\n    const availableCars = state.cars.filter(car => car.pricePerDay > 0).length;\n    const brandDistribution = state.cars.reduce((acc, car) => {\n      acc[car.brand] = (acc[car.brand] || 0) + 1;\n      return acc;\n    }, {});\n    const typeDistribution = state.cars.reduce((acc, car) => {\n      acc[car.type] = (acc[car.type] || 0) + 1;\n      return acc;\n    }, {});\n    return {\n      totalCars,\n      featuredCars,\n      availableCars,\n      brandDistribution,\n      typeDistribution\n    };\n  };\n  const value = {\n    cars: state.cars,\n    loading: state.loading,\n    error: state.error,\n    addCar,\n    updateCar,\n    deleteCar,\n    clearError,\n    getCarById,\n    getCarsByBrand,\n    getCarsByType,\n    getFeaturedCars,\n    getCarsByPriceRange,\n    searchCars\n  };\n  return /*#__PURE__*/_jsxDEV(CarsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n_s(CarsProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CarsProvider;\nexport const useCars = () => {\n  _s2();\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n_s2(useCars, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CarsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useReducer","seedCars","jsxDEV","_jsxDEV","CarsContext","initialState","cars","lastId","loading","error","carsReducer","state","action","type","payload","length","newCar","id","String","createdAt","Date","toISOString","updatedAt","map","car","filter","CarsProvider","children","_s","dispatch","initializeCars","console","log","localStorage","setItem","JSON","stringify","validateCarData","carData","errors","title","trim","push","brand","transmission","fuel","allowedFuelTypes","includes","pricePerDay","isNaN","seats","mileageKm","yearOfManufacture","currentYear","getFullYear","ownerName","contactNumber","phoneRegex","test","replace","images","Array","isArray","addCar","join","processedCarData","split","img","parseInt","featured","Boolean","updateCar","deleteCar","carId","clearError","getCarById","find","getCarsByBrand","getCarsByType","getFeaturedCars","getCarsByPriceRange","minPrice","maxPrice","searchCars","query","searchTerm","toLowerCase","_car$description","description","getCarsByTransmission","getCarsByFuelType","fuelType","getCarsByYearRange","startYear","endYear","getCarsByMileageRange","minMileage","maxMileage","getAvailableBrands","Set","sort","getAvailableTypes","getAvailableTransmissions","getAvailableFuelTypes","getPriceStatistics","prices","price","min","Math","max","average","round","reduce","sum","total","getInventoryStats","totalCars","featuredCars","availableCars","brandDistribution","acc","typeDistribution","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCars","_s2","context","Error","$RefreshReg$"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/state/CarsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\nimport { seedCars } from '../store/seed';\n\nconst CarsContext = createContext();\n\nconst initialState = {\n  cars: [],\n  lastId: 0,\n  loading: false,\n  error: null\n};\n\nconst carsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    case 'INIT_CARS':\n      return {\n        ...state,\n        cars: action.payload,\n        lastId: action.payload.length,\n        loading: false,\n        error: null\n      };\n    case 'ADD_CAR':\n      const newCar = {\n        ...action.payload,\n        id: String(state.lastId + 1),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      return {\n        ...state,\n        cars: [...state.cars, newCar],\n        lastId: state.lastId + 1,\n        error: null\n      };\n    case 'UPDATE_CAR':\n      return {\n        ...state,\n        cars: state.cars.map(car => \n          car.id === action.payload.id \n            ? { ...action.payload, updatedAt: new Date().toISOString() }\n            : car\n        ),\n        error: null\n      };\n    case 'DELETE_CAR':\n      return {\n        ...state,\n        cars: state.cars.filter(car => car.id !== action.payload),\n        error: null\n      };\n    case 'BULK_UPDATE':\n      return {\n        ...state,\n        cars: action.payload,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const CarsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(carsReducer, initialState);\n\n  // Initialize cars from localStorage or seed data\n  useEffect(() => {\n    const initializeCars = async () => {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      try {\n        // Force load from seed data for now to debug\n        console.log('Seed cars available:', seedCars.length);\n        console.log('Seed cars:', seedCars);\n        \n        // Temporarily force load from seed data\n        dispatch({ type: 'INIT_CARS', payload: seedCars });\n        \n        // Comment out localStorage logic for debugging\n        /*\n        const savedCars = localStorage.getItem('cars-state-v2');\n        if (savedCars) {\n          try {\n            const parsed = JSON.parse(savedCars);\n            console.log('Loading cars from localStorage:', parsed.cars.length);\n            dispatch({ type: 'INIT_CARS', payload: parsed.cars });\n          } catch (error) {\n            console.error('Error parsing saved cars:', error);\n            console.log('Loading cars from seed data:', seedCars.length);\n            dispatch({ type: 'INIT_CARS', payload: seedCars });\n          }\n        } else {\n          console.log('No saved cars found, loading from seed data:', seedCars.length);\n          dispatch({ type: 'INIT_CARS', payload: seedCars });\n        }\n        */\n      } catch (error) {\n        console.error('Error initializing cars:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to load cars data' });\n      }\n    };\n\n    initializeCars();\n  }, []);\n\n  // Persist to localStorage whenever cars change\n  useEffect(() => {\n    if (state.cars.length > 0) {\n      try {\n        localStorage.setItem('cars-state-v2', JSON.stringify({\n          cars: state.cars,\n          lastId: state.lastId\n        }));\n      } catch (error) {\n        console.error('Error saving to localStorage:', error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to save data locally' });\n      }\n    }\n  }, [state.cars, state.lastId]);\n\n  // Validation function\n  const validateCarData = (carData) => {\n    const errors = [];\n    \n    if (!carData.title || carData.title.trim().length < 2) {\n      errors.push('Title must be at least 2 characters long');\n    }\n    \n    if (!carData.brand || carData.brand.trim().length === 0) {\n      errors.push('Brand is required');\n    }\n    \n    if (!carData.type || carData.type.trim().length === 0) {\n      errors.push('Type is required');\n    }\n    \n    if (!carData.transmission || carData.transmission.trim().length === 0) {\n      errors.push('Transmission is required');\n    }\n    \n    if (!carData.fuel || carData.fuel.trim().length === 0) {\n      errors.push('Fuel type is required');\n    }\n    \n    // Validate fuel type is one of the allowed values\n    const allowedFuelTypes = ['Petrol', 'Diesel', 'EV', 'Hybrid'];\n    if (!allowedFuelTypes.includes(carData.fuel)) {\n      errors.push('Fuel type must be one of: Petrol, Diesel, EV, or Hybrid');\n    }\n    \n    if (!carData.pricePerDay || isNaN(carData.pricePerDay) || carData.pricePerDay < 0) {\n      errors.push('Price per day must be a positive number');\n    }\n    \n    if (!carData.seats || isNaN(carData.seats) || carData.seats < 1 || carData.seats > 10) {\n      errors.push('Seats must be between 1 and 10');\n    }\n    \n    if (!carData.mileageKm || isNaN(carData.mileageKm) || carData.mileageKm < 0) {\n      errors.push('Mileage must be a positive number');\n    }\n    \n    // Validate year of manufacture\n    if (carData.yearOfManufacture) {\n      const currentYear = new Date().getFullYear();\n      if (isNaN(carData.yearOfManufacture) || \n          carData.yearOfManufacture < 1990 || \n          carData.yearOfManufacture > currentYear + 1) {\n        errors.push(`Year of manufacture must be between 1990 and ${currentYear + 1}`);\n      }\n    }\n    \n    // Validate owner information\n    if (!carData.ownerName || carData.ownerName.trim().length === 0) {\n      errors.push('Owner name is required');\n    }\n    \n    if (!carData.contactNumber || carData.contactNumber.trim().length === 0) {\n      errors.push('Contact number is required');\n    }\n    \n    // Validate contact number format (basic Indian phone number validation)\n    if (carData.contactNumber && carData.contactNumber !== 'â€”') {\n      const phoneRegex = /^[6-9]\\d{9}$/;\n      if (!phoneRegex.test(carData.contactNumber.replace(/\\D/g, ''))) {\n        errors.push('Contact number must be a valid 10-digit Indian mobile number');\n      }\n    }\n    \n    // Validate images array\n    if (carData.images && Array.isArray(carData.images) && carData.images.length === 0) {\n      errors.push('At least one image is required');\n    }\n    \n    return errors;\n  };\n\n  const addCar = (carData) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({ type: 'SET_ERROR', payload: errors.join(', ') });\n        return false;\n      }\n      \n      // Process images\n      const processedCarData = {\n        ...carData,\n        images: carData.images ? carData.images.split(',').map(img => img.trim()).filter(img => img) : [],\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      \n      dispatch({ type: 'ADD_CAR', payload: processedCarData });\n      return true;\n    } catch (error) {\n      console.error('Error adding car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to add car' });\n      return false;\n    }\n  };\n\n  const updateCar = (carData) => {\n    try {\n      const errors = validateCarData(carData);\n      if (errors.length > 0) {\n        dispatch({ type: 'SET_ERROR', payload: errors.join(', ') });\n        return false;\n      }\n      \n      // Process images\n      const processedCarData = {\n        ...carData,\n        images: carData.images ? carData.images.split(',').map(img => img.trim()).filter(img => img) : [],\n        pricePerDay: parseInt(carData.pricePerDay) || 0,\n        seats: parseInt(carData.seats) || 5,\n        mileageKm: parseInt(carData.mileageKm) || 0,\n        yearOfManufacture: carData.yearOfManufacture ? parseInt(carData.yearOfManufacture) : null,\n        featured: Boolean(carData.featured)\n      };\n      \n      dispatch({ type: 'UPDATE_CAR', payload: processedCarData });\n      return true;\n    } catch (error) {\n      console.error('Error updating car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update car' });\n      return false;\n    }\n  };\n\n  const deleteCar = (carId) => {\n    try {\n      dispatch({ type: 'DELETE_CAR', payload: carId });\n      return true;\n    } catch (error) {\n      console.error('Error deleting car:', error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to delete car' });\n      return false;\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const getCarById = (id) => {\n    return state.cars.find(car => car.id === id);\n  };\n\n  const getCarsByBrand = (brand) => {\n    return state.cars.filter(car => car.brand === brand);\n  };\n\n  const getCarsByType = (type) => {\n    return state.cars.filter(car => car.type === type);\n  };\n\n  const getFeaturedCars = () => {\n    return state.cars.filter(car => car.featured);\n  };\n\n  const getCarsByPriceRange = (minPrice, maxPrice) => {\n    return state.cars.filter(car => \n      car.pricePerDay >= minPrice && car.pricePerDay <= maxPrice\n    );\n  };\n\n  const searchCars = (query) => {\n    const searchTerm = query.toLowerCase();\n    return state.cars.filter(car =>\n      car.title.toLowerCase().includes(searchTerm) ||\n      car.brand.toLowerCase().includes(searchTerm) ||\n      car.description?.toLowerCase().includes(searchTerm)\n    );\n  };\n\n  // Additional utility functions for better database management\n  const getCarsByTransmission = (transmission) => {\n    return state.cars.filter(car => car.transmission === transmission);\n  };\n\n  const getCarsByFuelType = (fuelType) => {\n    return state.cars.filter(car => car.fuel === fuelType);\n  };\n\n  const getCarsByYearRange = (startYear, endYear) => {\n    return state.cars.filter(car => \n      car.yearOfManufacture >= startYear && car.yearOfManufacture <= endYear\n    );\n  };\n\n  const getCarsByMileageRange = (minMileage, maxMileage) => {\n    return state.cars.filter(car => \n      car.mileageKm >= minMileage && car.mileageKm <= maxMileage\n    );\n  };\n\n  const getAvailableBrands = () => {\n    return [...new Set(state.cars.map(car => car.brand))].sort();\n  };\n\n  const getAvailableTypes = () => {\n    return [...new Set(state.cars.map(car => car.type))].sort();\n  };\n\n  const getAvailableTransmissions = () => {\n    return [...new Set(state.cars.map(car => car.transmission))].sort();\n  };\n\n  const getAvailableFuelTypes = () => {\n    return [...new Set(state.cars.map(car => car.fuel))].sort();\n  };\n\n  const getPriceStatistics = () => {\n    if (state.cars.length === 0) return null;\n    \n    const prices = state.cars.map(car => car.pricePerDay).filter(price => price > 0);\n    if (prices.length === 0) return null;\n    \n    return {\n      min: Math.min(...prices),\n      max: Math.max(...prices),\n      average: Math.round(prices.reduce((sum, price) => sum + price, 0) / prices.length),\n      total: prices.reduce((sum, price) => sum + price, 0)\n    };\n  };\n\n  const getInventoryStats = () => {\n    const totalCars = state.cars.length;\n    const featuredCars = state.cars.filter(car => car.featured).length;\n    const availableCars = state.cars.filter(car => car.pricePerDay > 0).length;\n    \n    const brandDistribution = state.cars.reduce((acc, car) => {\n      acc[car.brand] = (acc[car.brand] || 0) + 1;\n      return acc;\n    }, {});\n    \n    const typeDistribution = state.cars.reduce((acc, car) => {\n      acc[car.type] = (acc[car.type] || 0) + 1;\n      return acc;\n    }, {});\n    \n    return {\n      totalCars,\n      featuredCars,\n      availableCars,\n      brandDistribution,\n      typeDistribution\n    };\n  };\n\n  const value = {\n    cars: state.cars,\n    loading: state.loading,\n    error: state.error,\n    addCar,\n    updateCar,\n    deleteCar,\n    clearError,\n    getCarById,\n    getCarsByBrand,\n    getCarsByType,\n    getFeaturedCars,\n    getCarsByPriceRange,\n    searchCars\n  };\n\n  return (\n    <CarsContext.Provider value={value}>\n      {children}\n    </CarsContext.Provider>\n  );\n};\n\nexport const useCars = () => {\n  const context = useContext(CarsContext);\n  if (!context) {\n    throw new Error('useCars must be used within a CarsProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}