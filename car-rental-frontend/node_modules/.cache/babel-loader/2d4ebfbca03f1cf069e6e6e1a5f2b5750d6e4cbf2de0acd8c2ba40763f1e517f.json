{"ast":null,"code":"/**\n * Utility function to handle car image paths\n * @param {string} imagePath - The image path from the car data\n * @returns {string} - The processed image URL\n */\nexport const getCarImageUrl = imagePath => {\n  if (!imagePath) {\n    return '/img/placeholder.svg';\n  }\n\n  // If it's already a full URL or data URL, use it as is\n  if (imagePath.startsWith('http') || imagePath.startsWith('data:')) {\n    return imagePath;\n  }\n\n  // For uploaded images, construct full URL\n  if (imagePath.startsWith('/uploads/')) {\n    return `http://localhost:5000${imagePath}`;\n  }\n\n  // For relative paths, try to import from assets\n  try {\n    // Remove /src/assets/ prefix and get just the filename\n    const filename = imagePath.replace('/src/assets/', '');\n    return `/assets/${filename}`;\n  } catch (error) {\n    console.warn(`Could not load image: ${imagePath}`, error);\n    return '/img/placeholder.svg';\n  }\n};\n\n/**\n * Process an array of image paths\n * @param {Array} images - Array of image paths\n * @returns {Array} - Array of processed image URLs\n */\nexport const processCarImages = images => {\n  if (!images || images.length === 0) {\n    return ['/img/placeholder.svg'];\n  }\n  return images.map(getCarImageUrl);\n};","map":{"version":3,"names":["getCarImageUrl","imagePath","startsWith","filename","replace","error","console","warn","processCarImages","images","length","map"],"sources":["/Users/devulapellykushalkumarreddy/Downloads/CHALYATI/car-rental-frontend/src/utils/imageUtils.js"],"sourcesContent":["/**\n * Utility function to handle car image paths\n * @param {string} imagePath - The image path from the car data\n * @returns {string} - The processed image URL\n */\nexport const getCarImageUrl = (imagePath) => {\n  if (!imagePath) {\n    return '/img/placeholder.svg';\n  }\n  \n  // If it's already a full URL or data URL, use it as is\n  if (imagePath.startsWith('http') || imagePath.startsWith('data:')) {\n    return imagePath;\n  }\n  \n  // For uploaded images, construct full URL\n  if (imagePath.startsWith('/uploads/')) {\n    return `http://localhost:5000${imagePath}`;\n  }\n  \n  // For relative paths, try to import from assets\n  try {\n    // Remove /src/assets/ prefix and get just the filename\n    const filename = imagePath.replace('/src/assets/', '');\n    return `/assets/${filename}`;\n  } catch (error) {\n    console.warn(`Could not load image: ${imagePath}`, error);\n    return '/img/placeholder.svg';\n  }\n};\n\n/**\n * Process an array of image paths\n * @param {Array} images - Array of image paths\n * @returns {Array} - Array of processed image URLs\n */\nexport const processCarImages = (images) => {\n  if (!images || images.length === 0) {\n    return ['/img/placeholder.svg'];\n  }\n  \n  return images.map(getCarImageUrl);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAIC,SAAS,IAAK;EAC3C,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,sBAAsB;EAC/B;;EAEA;EACA,IAAIA,SAAS,CAACC,UAAU,CAAC,MAAM,CAAC,IAAID,SAAS,CAACC,UAAU,CAAC,OAAO,CAAC,EAAE;IACjE,OAAOD,SAAS;EAClB;;EAEA;EACA,IAAIA,SAAS,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;IACrC,OAAO,wBAAwBD,SAAS,EAAE;EAC5C;;EAEA;EACA,IAAI;IACF;IACA,MAAME,QAAQ,GAAGF,SAAS,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IACtD,OAAO,WAAWD,QAAQ,EAAE;EAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAC,yBAAyBN,SAAS,EAAE,EAAEI,KAAK,CAAC;IACzD,OAAO,sBAAsB;EAC/B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,gBAAgB,GAAIC,MAAM,IAAK;EAC1C,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IAClC,OAAO,CAAC,sBAAsB,CAAC;EACjC;EAEA,OAAOD,MAAM,CAACE,GAAG,CAACX,cAAc,CAAC;AACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}